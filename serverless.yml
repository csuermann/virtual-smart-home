service: virtual-smart-home

configValidationMode: warn

plugins:
  - serverless-plugin-select
  - serverless-webpack

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-west-1 #eu-west-1, us-east-1, us-west-2
  stage: dev
  memorySize: 256
  logRetentionInDays: 3

  environment:
    IS_PROD: ${env:IS_PROD}
    VSH_IOT_REGION: 'eu-west-1'
    VSH_IOT_ENDPOINT: ${env:IOT_ENDPOINT}
    ALEXA_CLIENT_ID: ${env:ALEXA_CLIENT_ID}
    ALEXA_CLIENT_SECRET: ${env:ALEXA_CLIENT_SECRET}
    HASH_SECRET: ${env:HASH_SECRET}
    MOMENTO_TOKEN: ${env:MOMENTO_TOKEN}
    LOG_LEVEL: ${env:LOG_LEVEL}
    VSH_LATEST_CLIENT_VERSION: '4.0.0'
    LOG_INSPECT_DEPTH: 8

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - iot:*
          Resource:
            - '*'
        - Effect: Allow
          Action:
            - dynamodb:*
          Resource:
            - !Sub arn:aws:dynamodb:${self:provider.environment.VSH_IOT_REGION}:${AWS::AccountId}:table/VSH
        - Effect: Allow
          Action:
            - cloudwatch:PutMetricData
            - logs:StartQuery
            - logs:GetQueryResults
          Resource:
            - '*'

custom:
  myStage: ${opt:stage, self:provider.stage} #self:custom.myStage
  myRegion: ${opt:region, self:provider.region} #self:custom.myRegion
  myAccountId: !Sub ${AWS::AccountId} #self:custom.myAccountId

functions:
  skill:
    regions:
      - eu-west-1
      - us-east-1
      - us-west-2
    handler: handler.skill
    timeout: 10
    #memorySize: 200
    maximumRetryAttempts: 0
    events:
      - alexaSmartHome:
          appId: ${env:SKILL_ID}

  backchannel:
    regions:
      - ${self:provider.environment.VSH_IOT_REGION}
    handler: handler.backchannel
    timeout: 30

  cleanup:
    regions:
      - ${self:provider.environment.VSH_IOT_REGION}
    handler: cleanup.cleanup
    timeout: 300
    maximumRetryAttempts: 0
    environment:
      VSH_IOT_POLICY:
        Ref: 'vshClientPolicy2'
    events:
      - schedule: cron(0 3 * * ? *)

  metrics:
    regions:
      - ${self:provider.environment.VSH_IOT_REGION}
    handler: metrics.metrics
    timeout: 15
    maximumRetryAttempts: 0
    events:
      - schedule: cron(0/15 * * * ? *)

  backendApi:
    regions:
      - ${self:provider.environment.VSH_IOT_REGION}
    handler: backendApi.server
    maximumRetryAttempts: 0
    environment:
      VSH_IOT_POLICY:
        Ref: 'vshClientPolicy2'
      STRIPE_API_KEY: ${env:STRIPE_API_KEY}
      STRIPE_WEBHOOK_SECRET: ${env:STRIPE_WEBHOOK_SECRET}
    events:
      - http:
          path: provision
          method: post
          cors: true
      - http:
          path: devices
          method: get
          cors: true
      - http:
          path: device
          method: delete
          cors: true
      - http:
          path: check_version
          method: get
          cors: true
      - http:
          path: plan
          method: get
          cors: true
      - http:
          path: checkout
          method: get
          cors: false
      - http:
          path: subscription
          method: get
          cors: false
      - http:
          path: stripe_redirect
          method: get
          cors: false
      - http:
          path: stripe_webhook
          method: post
          cors: false

  admin:
    regions:
      - ${self:provider.environment.VSH_IOT_REGION}
    handler: admin.admin
    maximumRetryAttempts: 0
    timeout: 25
    environment:
      VSH_ADMIN_API_KEY: ${env:VSH_ADMIN_API_KEY}
    events:
      - httpApi: '*'

resources: ${file(cloudFormation-${self:custom.myRegion}.yml)}
